// Code generated by protoc-gen-go. DO NOT EDIT.
// source: github.com/aperturerobotics/inca/chain/chain_config.proto

package chain

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import inca "github.com/aperturerobotics/inca"
import storageref "github.com/aperturerobotics/storageref"
import pbobject "github.com/aperturerobotics/pbobject"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// Config is the configuration for a chain.
type Config struct {
	// GenesisRef is a reference to the genesis block.
	GenesisRef *storageref.StorageRef `protobuf:"bytes,1,opt,name=genesis_ref,json=genesisRef" json:"genesis_ref,omitempty"`
	// EncryptionArgs are arguments to the encryption strategy.
	EncryptionArgs *pbobject.ObjectWrapper `protobuf:"bytes,2,opt,name=encryption_args,json=encryptionArgs" json:"encryption_args,omitempty"`
	// EncryptionStrategy is the encryption scheme used for this chain.
	EncryptionStrategy inca.EncryptionStrategy `protobuf:"varint,3,opt,name=encryption_strategy,json=encryptionStrategy,enum=inca.EncryptionStrategy" json:"encryption_strategy,omitempty"`
}

func (m *Config) Reset()                    { *m = Config{} }
func (m *Config) String() string            { return proto.CompactTextString(m) }
func (*Config) ProtoMessage()               {}
func (*Config) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *Config) GetGenesisRef() *storageref.StorageRef {
	if m != nil {
		return m.GenesisRef
	}
	return nil
}

func (m *Config) GetEncryptionArgs() *pbobject.ObjectWrapper {
	if m != nil {
		return m.EncryptionArgs
	}
	return nil
}

func (m *Config) GetEncryptionStrategy() inca.EncryptionStrategy {
	if m != nil {
		return m.EncryptionStrategy
	}
	return inca.EncryptionStrategy_EncryptionStrategy_Invalid
}

func init() {
	proto.RegisterType((*Config)(nil), "chain.Config")
}

func init() {
	proto.RegisterFile("github.com/aperturerobotics/inca/chain/chain_config.proto", fileDescriptor1)
}

var fileDescriptor1 = []byte{
	// 250 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x90, 0x41, 0x4b, 0x03, 0x31,
	0x10, 0x85, 0x59, 0xc5, 0x1e, 0x52, 0xa8, 0x10, 0x41, 0x97, 0x9e, 0x8a, 0xa7, 0x82, 0x90, 0x85,
	0xf6, 0x50, 0xbc, 0x29, 0xe2, 0xc1, 0x93, 0x90, 0x1e, 0x3c, 0x2e, 0x49, 0x98, 0xa4, 0x11, 0x4c,
	0xc2, 0x64, 0x7a, 0xe8, 0x9f, 0xf4, 0x37, 0x89, 0xd9, 0x65, 0x5d, 0x10, 0xb6, 0x97, 0xc9, 0x63,
	0xf2, 0xbe, 0x79, 0xc9, 0xb0, 0x47, 0xe7, 0xe9, 0x70, 0xd4, 0xc2, 0xc4, 0xaf, 0x46, 0x25, 0x40,
	0x3a, 0x22, 0x60, 0xd4, 0x91, 0xbc, 0xc9, 0x8d, 0x0f, 0x46, 0x35, 0xe6, 0xa0, 0x7c, 0xe8, 0x6a,
	0x6b, 0x62, 0xb0, 0xde, 0x89, 0x84, 0x91, 0x22, 0xbf, 0x2a, 0xbd, 0xe5, 0xc3, 0xd9, 0x09, 0xbf,
	0xa5, 0x63, 0x96, 0xbb, 0x29, 0x73, 0xa6, 0x88, 0xca, 0x01, 0x82, 0x1d, 0xc9, 0x1e, 0xdc, 0x4e,
	0x81, 0x49, 0x47, 0xfd, 0x09, 0x86, 0x06, 0xd1, 0x41, 0xf7, 0xdf, 0x15, 0x9b, 0xbd, 0x94, 0x27,
	0xf3, 0x1d, 0x9b, 0x3b, 0x08, 0x90, 0x7d, 0x6e, 0x11, 0x6c, 0x5d, 0xad, 0xaa, 0xf5, 0x7c, 0x73,
	0x2b, 0x46, 0x39, 0xfb, 0x4e, 0x4a, 0xb0, 0x92, 0xf5, 0x56, 0x09, 0x96, 0x3f, 0xb1, 0x6b, 0x08,
	0x06, 0x4f, 0x89, 0x7c, 0x0c, 0xad, 0x42, 0x97, 0xeb, 0x8b, 0x02, 0xdf, 0x89, 0x21, 0xed, 0xbd,
	0x1c, 0x1f, 0xa8, 0x52, 0x02, 0x94, 0x8b, 0x3f, 0xff, 0x33, 0xba, 0xcc, 0xdf, 0xd8, 0xcd, 0x68,
	0x42, 0x26, 0x54, 0x04, 0xee, 0x54, 0x5f, 0xae, 0xaa, 0xf5, 0x62, 0x53, 0x8b, 0xb2, 0x9d, 0xd7,
	0xc1, 0xb0, 0xef, 0xef, 0x25, 0x87, 0x7f, 0x3d, 0x3d, 0x2b, 0xff, 0xda, 0xfe, 0x04, 0x00, 0x00,
	0xff, 0xff, 0xef, 0xb3, 0xd3, 0x5d, 0xb6, 0x01, 0x00, 0x00,
}
